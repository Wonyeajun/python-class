class Students:
    def __init__(self,name, age, grade, group, num, club = ''):
        self.name = name
        self.age = age
        self.grade = grade
        self.group = group
        self.class_num = num
        self.club = club

    def name(self):
        return self.name

    def age(self):
        return self.age

    def grade(self):
        return self.grade

    def class_num(self):
        return self.class_num

    def club(self):
        return self.club

    def group(self):
        return self.group

    def Students_Data(self):
        if self.club == "동아리 없음" or self.club == "":
            return (f"학생 이름 : {self.name} / 나이 : {self.age} / 학년 : {self.grade} / 반 : {self.group} / 출석부 번호 : {self.class_num} / 동아리 없음")
        else:
            return (f"학생 이름 : {self.name} / 나이 : {self.age} / 학년 : {self.grade} / 반 : {self.group} /  출석부 번호 : {self.class_num} / {self.club} 동아리")
#-----------------------------------------------------------------------------------------------------------------------



class Management:
    def __init__(self):
        self.sl = []
        self.default()

    def Input(self):
        input_name = input("이름 : ")
        input_age = input("나이 : ")
        input_grade = input("학년 : ")
        input_group = input("학급 : ")
        input_num = input("출석부 번호 : ")
        input_club = input("동아리 : ")
        if input_club == "":
            self.sl.append(Students(input_name, input_age, input_grade, input_group, input_num, "동아리 없음"))
        else:
            self.sl.append(Students(input_name, input_age, input_grade, input_group, input_num, input_club))


    def ShowAll(self):
        print("--------------------------------------------------------------------------")
        for i in range(len(self.sl)):
            print(self.sl[i].Students_Data())
        print("--------------------------------------------------------------------------")

    def Delete(self):
        print("삭제하실 학생의 이름을 입력해주세요.")
        delete_name = input("학생 이름 : ")
        length = len(self.sl)
        for i in range(length):
            if self.sl[i].name == delete_name:
                del self.sl[i]

    def Club(self):
        cluber = input("동아리 : ")
        Ccluber = ''
        for i in range(len(self.sl)):
            if self.sl[i].club == cluber:
                if Ccluber != '':
                    Ccluber += f", {self.sl[i].name}"
                else:
                    Ccluber += self.sl[i].name
        print(f"동아리 회원 : {Ccluber}")

    def Own_num(self):
        target = input("학생이름 : ")
        own_num = ""
        for i in range(len(self.sl)):
            if self.sl[i].name == target:
                own_num += str(self.sl[i].grade)
                if int(self.sl[i].group) >= 10:
                    own_num += self.sl[i].group
                else:
                    own_num += f"0{self.sl[i].group}"
                if int(self.sl[i].class_num) >= 10:
                    own_num += str(self.sl[i].class_num)
                else:
                    own_num += f"0{self.sl[i].class_num}"
        print(own_num)

    def name_and_own_num(self):
        All = ''
        for i in range(len(self.sl)):
            a = 
                

    def default(self):
        self.sl.append(Students("홍길동", 17, 1, 1, 12, ''))
        self.sl.append(Students("김준수", 19, 3, 2, 23, "수학"))
        self.sl.append(Students("유명희", 18, 2, 9, 3, "과학"))


mg = Management()
while True:
    print("<<학생관리 시스템 메뉴>>")
    print("-----------------------------")
    print("1. 학생 추가")
    print("2. 학생 조회")
    print("3. 학생 삭제")
    print("4. 동아리 회원")
    print("5. 학번")
    print("6. 학생들 이름,학번")
    print("0. 종료")
    print("------------------------------")
    i = input(">> 값 입력 : ")
    if i == "1":
        mg.Input()
        print("성공적으로 추가됨")
    elif i == "2":
        mg.ShowAll()
    elif i == "3":
        mg.Delete()
    elif i == "4":
        mg.Club()
    elif i == "5":
        mg.Own_num()
    elif i == "6":
        mg.name_and_own_num()
    elif i == "0":
        print("프로그램 종료됨")
        break
    else:
        print("잘못된 입력값입니다. 다시 입력해주세요.")
#--------------------------------------------------------------------------------------------------------------------------------------------------------
# 학생관리 클래스를 만든다.
# 학생 리스트를 인스턴스 변수로 선언한다.
# 학생 리스트 안에는 학생 클래스의 객체가 들어간다. (학생 리스트는 처음에는 빈 리스트)
# 1. 학생 추가 매서드 : Student 클래스의 생성자의 매개변수에 맞추어 순서대로 값을 직접 입력해서 Student 객체를 생성,
#      이후 리스트에 추가한다.
#단, 동아리가 없을 경우 enter를 입력
# 2. 전체 학생 출력 매서드 : 학생 리스트 안의 Student 객체를 하나씩 Show 매서드 호출을 시행한다.
# 3. 학생 이름을 입력하여 삭제 매서드
# 4. 동아리 이름을 입력하여 해당 동아리 소속 학생 전부 출력 매서드
# 5. Student클래스에 '반' 인스턴스 변수 추가, 학번 출력 매서드(Student 클래스에 추가)
# ex)
# 학년 = 3
# 반 = 2 < - 추가
# 출석 번호 = 8
# 출력 >> "30208"
# 6. 5번을 이용하여 전체 학생의 학번과 이름을 출력
# ex) <30208> 홍길동
# 7. 반을 입력받아서 해당 반에 있는 모든 학생 출력
# 8. 동아리 클래스, 동아리 관리 클래스 (동아리 이름, 동아리 개설날짜)  (동아리 추가, 동아리삭제, 동아리 조회)
# 동아리 개설날짜는 ex) "2004.12.08"이런 식으로 값을 받음
