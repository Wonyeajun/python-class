# def solution(skill, skill_trees):
#     answer = 0
#     Skill = list(skill)     # Skill = ["C", "B", "D"]
#     Sorted = []             # Sorted = ["BCD", "CBD", "CB", "BD"]
#     for i in skill_trees:
#         A = list(i)         # A = ["B", "A", "C", "D", "E"]
#         B = ""
#         for j in A:
#             if j in Skill:
#                 B += j
#         Sorted.append(B)
#     print(Sorted)
#     for i in range(len(Sorted)):
#         Flag = 0
#         target = list(Sorted[i])
#         for j in range(len(list(Sorted[i]))):
#             if j == len(list(Sorted[i])):
#                 break
#             elif target[j] != Skill[j]:
#                 Flag = 1
#                 break
#         if Flag == 0:
#             answer += 1
#     return answer
# print(solution("CBD",	["BACDE", "CBADF", "AECB", "BDA"]))
#----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# 턴제 로그라이크 RPG
class Default_Character_Setting: # 캐릭터 원형 : 공통 속성값을 가지고 있음
    def __init__(self):
        self.hp = 0      # 체력
        self.mp = 0      # 마나

        self.Lv = 1      # 레벨
        self.Exp = 0     # 경험치

        self.vit = 10     # 생명력
        self.str = 10     # 힘
        self.int = 0     # 지능

    def set_stat(self):
        init_stat = 30
        print("스탯을 분배해 주세요.")
        print("vit : 생명력 스탯 입니다. 캐릭터의 HP 최대량을 결정합니다.")
        print("str : 힘 스탯 입니다. 캐릭터의 물리 공격력에 영향을 미칩니다.")
        print("int : 지능 스탯입니다. 플레이어의 마법 공격력 및 마나 최대치에 영향을 미칩니다.")
        while True:
            print("현재 분배된 플레이어의 스탯")
            print("vit : %d" % self.vit)
            print("str : %d" % self.str)
            print("int : %d" % self.int)
            print("분배 가능한 스탯 : %d" % init_stat)


            prefer = input("수정할 스탯을 입력해 주세요(수정을 마치려면 \"마침\") : ")

            if prefer == "마침":
                print("스탯 분배 완료")
                print("현재 분배된 플레이어의 정보")

                self.hp = self.vit * 5
                self.mp = self.int * 2

                print("hp : %d" % self.hp)
                print("mp : %d" % self.mp)
                print("vit : %d" % self.vit)
                print("str : %d" % self.str)
                print("int : %d" % self.int)
                break
            elif not prefer in ["vit", "str", "int"]:
                print("입력 이름 오류, 다시 입력해 주세요.")
                continue

            stat = int(input("수정할 수치를 입력해 주세요 : "))
            if prefer == "vit":
                if self.vit + stat < 10 or init_stat - stat < 0:
                    print("입력값 초과, 다시 입력해 주세요.")
                    continue
                self.vit += stat
                init_stat -= stat

            elif prefer == "str":
                if self.str + stat < 0 or init_stat - stat < 0:
                    print("입력값 초과, 다시 입력해 주세요.")
                    continue
                self.str += stat
                init_stat -= stat

            elif prefer == "int":
                if self.int + stat < 0 or init_stat - stat < 0:
                    print("입력값 초과, 다시 입력해 주세요.")
                    continue
                self.int += stat
                init_stat -= stat

            else:
                print("입력 이름 오류, 다시 입력해 주세요.")
                continue

#class Mycharacter1(Default_Character_Setting):

character = Default_Character_Setting()
character.set_stat()




# 행동(공격, 스킬)
# 맵(단계별, 다지선다형 길)
# 몬스터(스탯, 난수값에 의한 행동)
# 클리어 조건


# 아이템과 배낭(플레이어 슬롯)
# 버프계열 소모품(물약)과 스킬,
# 버프, 디버프 부여 시설
# 상점


# 가챠?
# 탈출, 아이템 창고
# 허기, 음식??
