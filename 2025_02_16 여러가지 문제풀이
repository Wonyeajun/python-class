String = input()
target = len(String) + 1
N = int(input())
work = []
for i in range(N):
    a = input()
    work.append(a)
print(work)
L_cnt = 0
D_cnt = 0
for i in range(len(work)):
    if work[i] == 'L':
        L_cnt += 1
    elif work[i] == 'D':
        D_cnt += 1
    else:
        if L_cnt - D_cnt > 0:
            target -= L_cnt - D_cnt
            if target < 1:
                target = 1
        elif L_cnt - D_cnt < 0:
            target += L_cnt - D_cnt
            if target > len(String) + 1:
                target = len(String) + 1
        L_cnt = 0
        D_cnt = 0
        if len(work[i]) == 3:
            String = String[0:target - 1] + work[i][2] + String[target - 1:len(String)]
            target += 1
        elif work[i] == 'B':
            target -= 1
            String = String[:target - 1] + String[target:]
print(String)                                                     # 백준 '에디터' 문제 내 풀이(오답)
#------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
from collections import deque
import sys

input = sys.stdin.readline

N = input().rstrip()

M = int(input())

L_deque, R_deque = deque([x for x in N]),deque()

for _ in range(M):
    edit = input().rstrip().split()

    if edit[0] == 'L' and L_deque:
        R_deque.appendleft(L_deque.pop())

    elif edit[0] == 'D' and R_deque:
        L_deque.append(R_deque.popleft())

    elif edit[0] == 'B' and L_deque:
        L_deque.pop()

    elif edit[0] == 'P':
        L_deque.append(edit[1])

print(''.join(L_deque + R_deque))                      # 백준 '에디터' 문제 형 풀이 (정답)
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
def solution(n, wires):
    answer = n
    L = []         # [1]
    R = []         #[1, 2, 3, 4, 5, 6 ,7, 8 ,9]
    for i in range(1, n + 1):
        R.append(i)
    b = R[:]
    print(f"b : {b}")
    for i in range(len(wires)):
        L = []
        R = b[:]
        L.append(wires[i][0])
        R.remove(wires[i][0])
        print(f"R : {R}")
        for _ in range(2):
            for j in range(len(wires)):
                if i != j:
                    if wires[j][0] in L:
                        L.append(wires[j][1])
                        R.remove(wires[j][1])
                    elif wires[j][1] in L:
                        L.append(wires[j][0])
                        R.remove(wires[j][0])
        a = abs(len(L) - len(R))
        print(f"i : {i}, len(L) : {len(L)}, len(R) : {len(R)}, a = {len(L) - len(R)}")
        if a < answer:
            answer = a
    return answer
print(solution(9, [[1,3],[2,3],[3,4],[4,5],[4,6],[4,7],[7,8],[7,9]]))# 프로그래머스 '전력량을 둘로 나누기' 문제 (푸는 중)
