import requests
import json

def get_masknum():
    servicekey = "5v6MONBHXlp5NB4c9ODMCB0an4DkBsIbrOk5e9O45h7z1MnuuO0X9YRj44GYHGYtbMzzMGC3zn+Hhzxk1Sfhzg=="
    url = 'http://apis.data.go.kr/B552584/ArpltnStatsSvc/getCtprvnMesureLIst'
    pm10_params ={'serviceKey' : servicekey, 'returnType' : 'json', 'numOfRows' : '100', 'pageNo' : '1', 'itemCode' : 'PM10', 'dataGubun' : 'HOUR', 'searchCondition' : 'MONTH' }

    pm10_response = requests.get(url, params=pm10_params).content
    pm10_result = json.loads(pm10_response)

    print(pm10_result['response']['body']['items'][0])
    pm10_incheon = pm10_result['response']['body']['items'][0]['incheon']
    pm10_gyeonggi = pm10_result['response']['body']['items'][0]['gyeonggi']
    pm10_avg = (int(pm10_incheon) + int(pm10_gyeonggi)) / 2
    print(f"미세먼지 인천 : {pm10_incheon}, 경기 : {pm10_gyeonggi}, 평균 : {pm10_avg}")
#-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    pm25_params ={'serviceKey' : servicekey, 'returnType' : 'json', 'numOfRows' : '100', 'pageNo' : '1', 'itemCode' : 'PM25', 'dataGubun' : 'HOUR', 'searchCondition' : 'MONTH' }
    pm25_response = requests.get(url, params=pm25_params).content
    pm25_result = json.loads(pm25_response)
    pm25_incheon = pm25_result['response']['body']['items'][0]['incheon']
    pm25_gyeonggi = pm25_result['response']['body']['items'][0]['gyeonggi']
    pm25_avg = (int(pm25_incheon) + int(pm25_gyeonggi)) / 2
    print(f"초미세먼지 인천 : {pm25_incheon}, 경기 : {pm25_gyeonggi}, 평균 : {pm25_avg}")

#------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    # 미세먼지 기준 : 0 ~ 30 ==> 좋음(1단계) / 31 ~ 80 ==> 보통(2단계) / 81 ~ 150 ==> 나쁨(3단계) / 151이상 ==> 매우나쁨(4단계)
    # 초미세먼지 기준 : 0 ~ 15 ==> 좋음(1단계) / 16 ~ 35 ==> 보통(2단계) / 36 ~ 75 ==> 나쁨(3단계) / 76이상 ==> 매우나쁨(4단계)
    # 행동지침 : 0 ~ 15 ==> nothing / 16 ~ 35 ==> 민감계층 야외활동 자제기준(건강 취약계층 대응 매뉴얼) / 36 ~ 75 ==> 고농도 미세먼지 7가지 대응요령 / 시, 도지사 : 사업장의 연료사용량 감축 권고 / 150 이상 : 고농도 미세먼지 7가지 대응요령
    # 건강 취약계층 대응 매뉴얼 - 민감군
        # 보통 : 실외활동 시 특별히 행동에 제약을 받을 필요는 없지만 몸 상태에 따라 유의하여 활동
        # 나쁨 : 장시간 또는 무리한 실외활동 제한, 특히 천식을 앓고 있는 사람이 실외에 있는 경우 흡입기를 더 자주 사용할 필요가 았음
        # 매우 나쁨 : 가급적 실내활동, 실외 활동시 의사와 상의
                                # - 일반인
        # 나쁨 : 장시간 또는 무리한 실외활동 제한, 특히 눈이 아픈 증상이 있거나, 기침이나 목의 통증으로 불편한 사람은 실외활동을 피해야 함
        # 매우 나쁨 : 장시간 또는 무리한 실외 활동 제한, 목의 통증과 기침 등의 증상이 있는 사람은 실외활동을 피해야 함
    # 고농도 미세먼지 7가지 대응 요령
        # 1. 외출은 가급적 자제하기
        # 2. 외출시 몸 상태에 따라 보건용 마스크(식약처 인증)착용하기(출처: 식품의약안전처)
        # 3. 외출시 대기오염이 심한 곳은 피하고, 활동량 줄이기
        # 4. 외출후 깨끗이 씻기
        # 5. 물과 비타민C가 풍부한 과일, 야채 섭취하기
        # 6. 환기, 물청소 등 실내 공기질 관리하기
        # 7. 대기오염 유발행위 자제하기
    for n, pm10_sd in enumerate([30, 80, 150,float('inf')],start=1):
        if pm10_avg <= pm10_sd:
            pm10_n = n
            break
    for n, pm25_sd in enumerate([15, 35, 75,float('inf')],start=1):
        if pm25_avg <= pm25_sd:
            pm25_n = n
            break

    return pm10_avg, pm25_avg
